input {
  beats {
    port => 5044
  }
}

filter {
  grok {
    match => { "message" => ["%{IPORHOST:[nginx][access][remote_ip]} - %{DATA:[nginx][access][user_name]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} \"%{DATA:[nginx][access][referrer]}\" \"%{DATA:[nginx][access][agent]}\""] }
    remove_field => "message"
  }
  mutate {
    add_field => { "read_timestamp" => "%{@timestamp}" }
  }
  date {
    match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
    remove_field => "[nginx][access][time]"
  }
  useragent {
    source => "[nginx][access][agent]"
    target => "[nginx][access][user_agent]"
    remove_field => "[nginx][access][agent]"
  }
  geoip {
    source => "[nginx][access][remote_ip]"
    target => "[nginx][access][geoip]"
  }
}

output {
  jdbc {
    connection_string => '${JDBC_CONNECTION_STRING}'
    username => '${JDBC_CONNECTION_USERNAME}'
    password => '${JDBC_CONNECTION_PASSWORD}'
    driver_jar_path => '/usr/share/java/postgresql-jdbc2.jar'
    driver_class => 'org.postgresql.Driver'
    max_pool_size => 2
    statement => [ "INSERT INTO log (host, timestamp, method, url, http_code, referer, country_name) VALUES(?, CAST (? AS timestamp), ?, ?, CAST (? AS integer), ?, ?)", "host", "@timestamp", "%{nginx[access][method]}", "%{nginx[access][url]}", "%{nginx[access][response_code]}", "%{nginx[access][referrer]}", "%{nginx[access][geoip][country_name]}" ]
  }
  stdout { }
}
